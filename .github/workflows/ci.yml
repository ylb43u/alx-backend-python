name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DB: messaging_db
          MYSQL_USER: messaging_user
          MYSQL_PASSWORD: toor
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      MYSQL_DB: messaging_db
      MYSQL_USER: messaging_user
      MYSQL_PASSWORD: toor
      MYSQL_HOST: mysql  # hostname points to the service container
      PYTHONUNBUFFERED: 1

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        cd messaging_app
        python -m pip install --upgrade pip
        pip install -r messaging_app/requirements.txt
        pip install flake8 coverage

    - name: Run flake8 linting
      run: |
        cd messaging_app
        flake8 messaging_app --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 messaging_app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          mysqladmin ping -h mysql -u$MYSQL_USER -p$MYSQL_PASSWORD && break
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Run Django tests with coverage
      run: |
        cd messaging_app
        coverage run --source='messaging_app' -m pytest messaging_app
        coverage xml
        coverage report -m

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml
